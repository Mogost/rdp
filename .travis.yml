language: rust
cache: cargo
services:
  - docker
addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - binutils-dev
env:
  global:
    # This will be part of the release tarball
    # TODO change the project name
    - PROJECT_NAME=rdp
    # TODO comment out this variable if you don't want to build .deb packages on all the targets.
    # - MAKE_DEB=yes
    # TODO update these two variables. They are part of the .deb package metadata
    - DEB_MAINTAINER="Stephan HÃ¼gel <urschrei@gmail.com>"
    - DEB_DESCRIPTION=""
    - TRAVIS_CARGO_NIGHTLY_FEATURE=""
    - DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64
    - secure: qpSSpMyDAlyoPEiNcimsA+zhAQCx9s242DkxUnVvKWWNeWuIdg9Cr5vMIAG0wDv0xoem7rLXpWI3g3Y1lrNI7rtFfsqB6ayRNYG1MSYeudYOa0nl0NShAGEifGsamBuJ3hvlAszR3+VcX4X0gV1kn50RHtAB4mnPFn9Hj3sAPzvB+/lOZHAbuVHJYI2Rmq5SLqIIzUi44qpO/Yrb3D9nT56kWJN3ZSngG7eZIdkk5ThTRqu/zzATQKCpQn9ci1DlSYLBcNJ3py2fQ2FZaT63k/BWU4CoC7U59kzyVcQYjERadGkZ2Z1zl1dRlAkAyW+Qgh/fo7XRfIQqkAyVk79xrsZSeY/4iEHqaAQNjFboQBcb+vCP0wv6g0huaa7jrEiuTUsDXeSb/nHPyk7ibCz1iU+GXRAO8dSQvzC8tLH7GwQkKcEMzf6p37hoae3I1/w+ZgP6a8zAL8tuyxdEaYlIc3G4v6WIJT7Z6zz88VLXAMFQ2MSoLAYeM7eNcoGsxMe4XciNLxPIlQxLm2n6Fsnc1yuYk4DAwgw2t2PgBl0X1FZnYzgEJk0NKIBfwFEERDDOlj5fCmkrJ4bNVAJvNO7xxhMOqF1E3iL2uxwrnhdl4s0ALaH5yFOBHHBrEnHgznJrbxgGQKG8LL7dHwekXA6P9sgWW2efxni0nPZ+b+DnS/k=


# AFAICT There are a few ways to set up the build jobs. This one is not the DRYest but I feel is the
# easiest to reason about.
# TODO Feel free to remove the channels/targets you don't need
# NOTE Make *sure* you don't remove a reference (&foo) if you are going to dereference it (*foo)
matrix:
  include:
    # Stable channel
    # - os: osx
    #   rust: stable
    #   env: TARGET=i686-apple-darwin
    # - os: linux
    #   rust: stable
    #   env: TARGET=i686-unknown-linux-gnu
    #   addons:
    #     apt:
    #       packages: &i686_unknown_linux_gnu
    #         # Cross compiler and cross compiled C libraries
    #         - gcc-multilib

    ###############################
    - os: osx
      osx_image: xcode7.3
      rust: stable
      env: TARGET=x86_64-apple-darwin
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
      services: docker
    # Beta channel
    # - os: osx
    #   rust: beta
    #   env: TARGET=i686-apple-darwin
    # - os: linux
    #   rust: beta
    #   env: TARGET=i686-unknown-linux-gnu
    #   addons:
    #     apt:
    #       packages: *i686_unknown_linux_gnu
    ############################
    - os: osx
      rust: beta
      osx_image: xcode7.3
      env: TARGET=x86_64-apple-darwin
    - os: linux
      rust: beta
      env: TARGET=x86_64-unknown-linux-gnu


    # Nightly channel
    # - os: osx
    #   rust: nightly
    #   env: TARGET=i686-apple-darwin
    # - os: linux
    #   rust: nightly
    #   env: TARGET=i686-unknown-linux-gnu
    #   addons:
    #     apt:
    #       packages: *i686_unknown_linux_gnu

    ############
    - os: osx
      osx_image: xcode7.3
      rust: nightly
      env: TARGET=x86_64-apple-darwin
    - os: linux
      rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu

  allow_failures:
    # Target `i686-unknown-linux-musl` is currently only available on the nightly channel
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-musl
    - os: linux
      rust: beta
      env: TARGET=i686-unknown-linux-musl

before_install:
  - bash ci/preinstall.sh
  - export PATH="$PATH:$HOME/.cargo/bin"

before_script: |
  PKGNAME="${TRAVIS_REPO_SLUG}" # must match with cargo.toml
  LOCAL="~/.local" # install here to avoid `sudo`
  pip install travis-cargo --user &&
  export PATH=$HOME/.local/bin:$PATH

install:
  - echo $TRAVIS_RUST_VERSION
  - bash ci/install.sh

script:
  - bash ci/script.sh

after_success:
  - travis-cargo --only stable doc
  - travis-cargo --only stable doc-upload
  - travis-cargo coveralls --no-sudo --verify
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./kcov/build/src/kcov --verify --coveralls-id=$TRAVIS_JOB_ID --exclude-pattern=/.cargo target/kcov target/debug/rdp-*; fi
  - if [[ "$TARGET" == "x86_64-unknown-linux-gnu" ]]; then docker pull $DOCKER_IMAGE; fi

before_deploy:
  - if ! [[ "$TARGET" == "x86_64-unknown-linux-gnu" ]]; then bash ci/before_deploy.sh; fi
  - if [[ "$TARGET" == "x86_64-unknown-linux-gnu" ]]; then sudo docker run -e TRAVIS_TAG="$TRAVIS_TAG" --rm -v `pwd`:/io $DOCKER_IMAGE /io/ci/manylinux_rust.sh; fi
  - sudo chown $USER ${PROJECT_NAME}-${TRAVIS_TAG}-${TARGET}.tar.gz
  
deploy:
  provider: releases
  # TODO Regenerate this api_key for your project, this one won't work for you. Here's how:
  # - Go to 'https://github.com/settings/tokens/new' and generate a Token with only the
  # `public_repo` scope enabled
  # - Call `travis encrypt $github_token` where $github_token is the token you got in the previous
  # step and `travis` is the official Travis CI gem (see https://rubygems.org/gems/travis/)
  # - Enter the "encrypted value" below
  api_key:
        - secure: qpSSpMyDAlyoPEiNcimsA+zhAQCx9s242DkxUnVvKWWNeWuIdg9Cr5vMIAG0wDv0xoem7rLXpWI3g3Y1lrNI7rtFfsqB6ayRNYG1MSYeudYOa0nl0NShAGEifGsamBuJ3hvlAszR3+VcX4X0gV1kn50RHtAB4mnPFn9Hj3sAPzvB+/lOZHAbuVHJYI2Rmq5SLqIIzUi44qpO/Yrb3D9nT56kWJN3ZSngG7eZIdkk5ThTRqu/zzATQKCpQn9ci1DlSYLBcNJ3py2fQ2FZaT63k/BWU4CoC7U59kzyVcQYjERadGkZ2Z1zl1dRlAkAyW+Qgh/fo7XRfIQqkAyVk79xrsZSeY/4iEHqaAQNjFboQBcb+vCP0wv6g0huaa7jrEiuTUsDXeSb/nHPyk7ibCz1iU+GXRAO8dSQvzC8tLH7GwQkKcEMzf6p37hoae3I1/w+ZgP6a8zAL8tuyxdEaYlIc3G4v6WIJT7Z6zz88VLXAMFQ2MSoLAYeM7eNcoGsxMe4XciNLxPIlQxLm2n6Fsnc1yuYk4DAwgw2t2PgBl0X1FZnYzgEJk0NKIBfwFEERDDOlj5fCmkrJ4bNVAJvNO7xxhMOqF1E3iL2uxwrnhdl4s0ALaH5yFOBHHBrEnHgznJrbxgGQKG8LL7dHwekXA6P9sgWW2efxni0nPZ+b+DnS/k=
  file_glob: true
  file: ${PROJECT_NAME}-${TRAVIS_TAG}-${TARGET}.*
  # don't delete the artifacts from previous phases
  skip_cleanup: true
  # deploy when a new tag is pushed
  on:
    # channel to use to produce the release artifacts
    # NOTE make sure you only release *once* per target
    # TODO you may want to pick a different channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true

branches:
  only:
    # Pushes and PR to the master branch
    - master
    # IMPORTANT Ruby regex to match tags. Required, or travis won't trigger deploys when a new tag
    # is pushed. This regex matches semantic versions like v1.2.3-rc4+2016.02.22
    - /^v\d+\.\d+\.\d+.*$/

notifications:
  email:
    on_success: never
