on: [push, pull_request]

defaults:
  run:
    shell: bash

env:
  cratename: rdp
  rustflags: -C rpath

name: Test and Build

jobs:
  build:
    name: Build and release on ${{ matrix.os }} (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - build: linux
          os: ubuntu-latest
          rust: stable
          target: x86_64-unknown-linux-gnu
          use-cross: true
        - build: linux
          os: ubuntu-latest
          rust: stable
          target: aarch64-unknown-linux-gnu
          use-cross: true
        - build: macos
          os: macos-latest
          rust: stable
          target: x86_64-apple-darwin
          use-cross: false
          deptarget: 10.9
        - build: macos
          os: macos-latest
          rust: stable
          target: aarch64-apple-darwin
          use-cross: false
          deptarget: 11.0
        - build: windows
          os: windows-latest
          rust: stable
          target: x86_64-pc-windows-msvc
          use-cross: false
        - build: linux
          os: ubuntu-latest
          rust: stable
          target: aarch64-unknown-linux-gnu
          use-cross: true
    steps:
      - name: Switch to macOS 13.x SDK
        if: matrix.target == 'aarch64-apple-darwin'
        run: |
          xcodebuild -showsdks
          SDKROOT=$(xcrun -sdk macosx13.1 --show-sdk-path)
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        env:
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.deptarget }}
        with:
          use-cross: ${{ matrix.use-cross }}
          command: build
          args: --release --target=${{ matrix.target }} --features headers
      - name: Release
        uses: actions/upload-artifact@v3
        with:
          name: xxx
          path: target/
   
